2024-11-15
- Dare un nome alla relazione tra child e parent indipendentemente da reflection o preservation
- stesso per child rule
- stesso per sibling??
Dopo la dimostrazione della correttezza delle condizioni per preservation/reflection vedere come tradurre induttivamente formule di FOL in condition trees. 

======================== 


Journal submission [after FestColloquim]
- include additionally:
  - correspondance between NGC and FOL formulas
  - explicit read-back: from condition to formula
  - from formula to conditions give a construction for and/or/not/exists
  - section on computable entailment 
  - I would like to get rid of I_{X,Y}, the empty shifters. 
- completeness for arrow based conditions - NO
- Existential quantification: relations with backward shift, properties? Adjointness? Not clear. Relation with shift????
- logical characterization of provable entailment ??? sarebbe bello

String diagrams
- justifcation of using discrete interfaces
- equivalence of conditions related through split-epi which are iso on nodes
- sibling and double negation rules for morphisms
- encoding of string diagrams vs conditions
- what is the precise correspondence? 
- are they equivalent?
- we induce morphisms on string diagrams, which is sound and complete wrt entailment 

Condition trees
- objects: condition trees - trees of open graphs (graphs with interface) where sons have a morphims from interface to body of parent  DONE
- morphisms: arbitrary collections of (v,a,w) a:v->w open graph morphism (in any direction) DONE
- composition defined whenever it exists DONE
- conditions on morphisms (type system)
  - reflect/preserve satisfaciton (semantically) DONE
  - reflect satisfaciton structurally (standard/double negation (convolution) rule/sibling rule) DONE
  - preserve satisfaciton structurally (child rule forall) DONE

- typing morphisms according to properties leading to several categories DONE

Entailment of CTs and of FOL formulas. Is it obvious that they coincide?

T \entails U iff [[T]] \entails [[U]] 
\Phi entails \Psi iff CT[\Phi] \entails CT[\Psi]

Shoudl be, but proof obligation? Should relate satisfaciton for CT's with satisfaction for FOL. 


Main result: there are indentity-on-object functors (CT*_{rfl})^{op} \to CT^\entails and CT*_{prs} to CT^\entails which are surjective on objects.
Existence: trivial if all definitions are stated correctly, because a path from U to V in (CT*_{rfl})^{op} is made of arrows which are mapped (taking the right direction) to entailments.
Surjectivity:
T \entails U means that there is an undirected path form U to T.

T \entails U means [[T]] \entails [[U]], by the above.
By completenss of FOL-string diagrams, in a suitable hom there is 
SD([[U]]) <= SD([[T]]). <= is witnessed by? *** check how completeness work in the paper by Pippo.
Then mimic it by translating CT into string diagrams.... 


18/10/2024
Probelmi con la dimostrazione 
- sibling rule ha un or, problematico per la prova per induzione del Lemma 2. Nel Lemma 1 si vede l'or.
Una soluzione sarebbe dimostrare che "o un nodo o un sibling ha un modello" invece che "un nodo ha un modello": quando arrivi alla radice non ci sono sibilings quindi Ã¨ fatto. !!!


